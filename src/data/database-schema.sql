DROP TABLE IF EXISTS SESSION;

DROP TABLE IF EXISTS ACCOUNT;

DROP TABLE IF EXISTS VERIFICATION;

DROP TABLE IF EXISTS "USER";

CREATE TABLE "USER" (
	"id" VARCHAR(32) NOT NULL PRIMARY KEY,
	"name" VARCHAR(25) NOT NULL,
	"email" VARCHAR(40) NOT NULL UNIQUE,
	"emailVerified" INTEGER NOT NULL,
	"image" TEXT,
	"role" VARCHAR(15) NOT NULL CHECK (ROLE IN ('user', 'admin')) DEFAULT 'user',
	"createdAt" DATE NOT NULL,
	"updatedAt" DATE NOT NULL
);

CREATE TABLE SESSION (
	"id" VARCHAR(32) NOT NULL PRIMARY KEY,
	"token" VARCHAR(32) NOT NULL UNIQUE,
	"ipAddress" VARCHAR(40),
	"userAgent" VARCHAR(255),
	"userId" VARCHAR(32) NOT NULL REFERENCES "USER" (ID),
	"expiresAt" DATE NOT NULL,
	"createdAt" DATE NOT NULL,
	"updatedAt" DATE NOT NULL
);

CREATE INDEX IDX_SESSION_USERID ON SESSION ("userId");

CREATE TABLE ACCOUNT (
	"id" VARCHAR(32) NOT NULL PRIMARY KEY,
	"accountId" VARCHAR(50) NOT NULL,
	"providerId" VARCHAR(32) NOT NULL,
	"userId" VARCHAR(32) NOT NULL REFERENCES "USER" (ID),
	"accessToken" VARCHAR(40),
	"refreshToken" VARCHAR(40),
	"idToken" VARCHAR(40),
	"accessTokenExpiresAt" DATE,
	"refreshTokenExpiresAt" DATE,
	"scope" VARCHAR(50),
	"password" VARCHAR(255),
	"createdAt" DATE NOT NULL,
	"updatedAt" DATE NOT NULL
);

CREATE INDEX IDX_ACCOUNT_USERID ON ACCOUNT ("userId");

CREATE TABLE VERIFICATION (
	"id" VARCHAR(32) NOT NULL PRIMARY KEY,
	"identifier" VARCHAR(50) NOT NULL,
	"value" VARCHAR(32) NOT NULL,
	"expiresAt" DATE NOT NULL,
	"createdAt" DATE NOT NULL,
	"updatedAt" DATE NOT NULL
);

CREATE INDEX IDX_VERIFICATION_IDENTIFIER ON VERIFICATION (IDENTIFIER);

